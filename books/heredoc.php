<html>
<head>
    <title>Пример синтаксиса HEREDOC</title>
</head>
<body>

<?php

$a=10;
$b=12;
$c=18;
$summa=$a+$b+$c;

echo <<<HERE

<table width="400" align="center" cellpadding="10" bgcolor="#f6f6f6" style="border:1px solid gray;">
<tr>
<td valign="top"><p>Счастье разными людьми понимается по-разному. Чтобы сразу же прийти к согласию, давайте возьмем определение этого слова в обычном толковом словаре.</p></td>
</tr>
<tr>
<td><p>Счастье - состояние человека, которое соответствует наибольшей внутренней удовлетворённости условиями своего бытия, полноте и осмысленности жизни, осуществлению своего человеческого назначения.</p></td>
</tr>
</table>

HERE;

echo "Сумма переменных a, b, c, равна: $summa";

?>
<br>
<hr>
<?php
$str = <<<EOD
Пример строки,
охватывающей несколько строчек,
с использованием heredoc-синтаксиса.
EOD;

/* Более сложный пример с переменными. */
class foo
{
    var $foo;
    var $bar;

    function foo()
    {
        $this->foo = 'Foo';
        $this->bar = array('Bar1', 'Bar2', 'Bar3');
    }
}

$foo = new foo();
$name = 'МоеИмя';

echo <<<EOT
Меня зовут "$name". Я печатаю $foo->foo.
Теперь я вывожу {$foo->bar[1]}.
Это должно вывести заглавную букву 'A': \x41
EOT;
?>
<hr>
<p>
    Для вывода на экран большого объема информации в PHP используется так называемый синтаксис Heredoc.
    С помощью этого синтаксиса можно выводить таблицы, текст, изображения.
    При этом, не нужно ковыряться в коде и экранировать кавычки, достаточно просто поместить требуемый код между специальными
    маркерами.

    Давайте посмотрим как обозначается синтаксис Heredoc. Итак, после оператора вывода на экран (echo или print) ставятся
    символы <<<, после которых указывается произвольный идентификатор, например, TEXT или HERE.
    Далее вставляется код (HTML или PHP), который необходимо вывести на экран.
    Закрывается синтаксис тем же идентификатором, который указывался в самом начале.
    В конце идентификатора ставится точка с запятой.
</p>
</body>
</html>


<?php

$name = 'Vladislav Gusev';

$substring = substr($name, 0, 4);

echo $substring;
